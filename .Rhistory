geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by top 20 cuisine and borough', x='Top 20 cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by top 20 cuisine and borough', x='Top 20 cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 8, face = "bold"), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by top 20 cuisine and borough', x='Top 20 cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 8), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by top 20 cuisine and borough', x='Top 20 cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
#new table with InspClosureRatio based on 'topcuisines' table AND boro
cuisine_InspClosureRatio = topcuisines %>%
group_by(cuisine, boro) %>%
summarise(ClosureCount = sum(action == 'Closed' | action == 'Reclosed'),
InspCount = n(),
InspClosureRatio = ClosureCount / InspCount)
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='Inspection closure ratio by top 20 cuisine and borough', x='Top 20 cuisine', y='Inspection closure ratio') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='NYC Borough Closure Rate by Top 20 Cuisinesx', x='Top 20 cuisine', y='Closure Rate') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='NYC Borough Closure Rate by Top 20 Cuisines', x='Top 20 cuisine', y='Closure Rate') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='NYC Borough Closure Rate: Top 20 Cuisines', x='Top 20 cuisine', y='Closure Rate') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='NYC Borough Restaurant Closure Rate: Top 20 Cuisines', x='Top 20 cuisine', y='Closure Rate') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 7), legend.position="none")
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12,
labels=c("J","F","M","A","M","Jn","Jl","A","S","O","N","D")) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
View(trendScoreMonth)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
# scale_x_continuous(breaks = 1:12,
labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")) +
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
# scale_x_continuous(breaks = 1:12,
#                labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
View(inspections)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
# coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
# scale_x_continuous(breaks = 1:12,
#                   labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12, ) +  # labels=c("Jn","Fb","Mr","Ap","Mr","Jn","Jl","Ag","Sp","Oc","Nv","Dc")
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough',
x='Month',
y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Average score by month and borough', x='Month', y='Average score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
# coord_cartesian(xlim = c(1,12), ylim = c(13,18)) +
scale_x_continuous(breaks = 1:12)
ggplot(data=trendScoreMonth, aes(x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)
cuisine_InspClosureRatio %>%
ggplot(aes(cuisine_InspClosureRatio, x=cuisine, y=InspClosureRatio)) +
geom_bar(stat='identity', aes(fill=boro)) +
facet_grid(. ~ boro) +
labs(title='NYC Borough Restaurant Closure Rate: Top 20 Cuisines', x='Top 20 cuisine', y='Closure Rate') +
scale_y_continuous(labels = scales::percent) +
coord_flip() +
theme(axis.text.x = element_text(angle = 90, vjust=0.5, hjust=1, size = 6), legend.position="none")
boroAvgScoreByMonth = boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)
# new table with
boroAvgScoreByMonth = inspections %>%
group_by(month, boro) %>%
summarise(avg = mean(score))
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)
?breaks
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks == 1:12)     # x axis numbers were off so i used breaks function to
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks = 1:12)     # x axis numbers were off so i used breaks function to
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks= 1:12)     # x axis numbers were off so i used breaks function to
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
# scale_x_continuous(breaks= 1:12)     # x axis numbers were off so i used breaks function to
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score')# +
# new table with
boroAvgScoreByMonth = inspections %>%
group_by(month, boro) %>%
summarise(avg = mean(score))
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score')# +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month", x='Month', y='AVG Score') +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_bar(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_bar(stat='identity', aes(color=boro), position = 'dodge') +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_bar(stat='identity', aes(fill=boro), position = 'dodge') +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_count(stat='identity', aes(fill=boro), position = 'dodge') +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_count(stat='identity', aes(color=boro), position = 'dodge') +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_line(stat='identity', aes(color=boro), position = 'dodge') +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_line(stat='identity', aes(color=boro), position = 'dodge', width = 1) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
geom_line(stat='identity', aes(color=boro) +
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
boroAvgScoreByMonth %>%
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") #+
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
# new table with
boroAvgScoreByMonth = inspections %>%
group_by(month, boro) %>%
summarise(avgScore = mean(score))
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avgScore)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
# new table with
boroAvgScoreByMonth = inspections %>%
group_by(month, boro) %>%
summarise(avg_Score = mean(score))
boroAvgScoreByMonth %>%
ggplot(aes(boroAvgScoreByMonth, x = month, y = avg_Score)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title="NYC Borough's Avg Inspection Score by Month") +
scale_x_continuous(breaks= 1:12)                     # x axis numbers were off so i used breaks function
# new table
closuresByMonth = inspections %>%
group_by(month, boro) %>%
summarise(Closure_Count = sum(action == 'Closed' | action == 'Reclosed'),
Monthly_Closure_Count = n(),
Monthly_Closure_Ratio = Closure_Count / Monthly_Closure_Count)
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0.005,0.035),
breaks=seq(0,0.035,0.005),
labels=scales::percent) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(limits=c(0.005,0.035), breaks=seq(0,0.035,0.005), labels=scales::percent)
trendClosures = inspections %>%
group_by(month, boro) %>%
summarise(closures = sum(action == 'closed' | action == 'reclosed'),
inspection = n(),
ratio = closures / inspection)
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0.005,0.035),
breaks=seq(0,0.035,0.005),
labels=scales::percent) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
trendClosures = inspections %>%
group_by(month, boro) %>%
summarise(closures = sum(action == 'Closed' | action == 'Reclosed'),
inspection = n(),
ratio = closures / inspection)
ggplot(data=trendClosures, aes(x=month, y=ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough',
x='Month',
y='Inspection closure ratio') +
coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12,
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")) +
scale_y_continuous(limits=c(0.005,0.035),
breaks=seq(0,0.035,0.005),
labels=scales::percent) +
scale_color_brewer(palette='Set1') +
theme_bw() +
theme(legend.key=element_blank())
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
#  coord_cartesian(xlim = c(1,12)) +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(limits=c(0.005,0.035), breaks=seq(0,0.035,0.005), labels=scales::percent)
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
# scale_y_continuous(limits=c(0.005,0.035), breaks=seq(0,0.035,0.005), labels=scales::percent)
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) #+
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) #+
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_freqpoly(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(labels=scales::percent) # limits=c(0.005,0.035), breaks=seq(0,0.035,0.005),
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title='Inspection closure ratio by month and borough') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(labels=scales::percent)
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title='NYC Borough Inspection Closure Ratio by Month') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(labels=scales::percent)
closuresByMonth %>%
ggplot(aes(closuresByMonth, x=month, y=Monthly_Closure_Ratio)) +
geom_line(stat='identity', aes(color=boro)) +
labs(title='NYC Borough Closure Rate by Month') +
scale_x_continuous(breaks = 1:12, labels=c("1","2","3","4","5","6","7","8","9","10","11","12")) +
scale_y_continuous(labels=scales::percent)
raw.df = raw.df %>%
mutate(raw.df, action = gsub(pattern = "Violations were cited in the following area(s).", replacement = "Violations", x = action, fixed = T)) %>%
mutate(action = gsub(pattern = "No violations were recorded at the time of this inspection.", replacement = "No Violations", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-opened by DOHMH", replacement = "Reopened", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-closed by DOHMH", replacement = "Re-closed", x = action)) %>%
mutate(action = gsub(pattern = "Establishment Closed by DOHMH.  Violations were cited in the following area(s) and those requiring immediate action were addressed.", replacement = "Closed", x = action, fixed = T))
raw.df = raw.df %>%
mutate(action = gsub(pattern = "Violations were cited in the following area(s).", replacement = "Violations", x = action, fixed = T)) %>%
mutate(action = gsub(pattern = "No violations were recorded at the time of this inspection.", replacement = "No Violations", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-opened by DOHMH", replacement = "Reopened", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-closed by DOHMH", replacement = "Re-closed", x = action)) %>%
mutate(action = gsub(pattern = "Establishment Closed by DOHMH.  Violations were cited in the following area(s) and those requiring immediate action were addressed.", replacement = "Closed", x = action, fixed = T))
raw.df = raw.df %>%
mutate(action = gsub(pattern = "Violations were cited in the following area(s).", replacement = "Violations", x = action, fixed = T)) %>%
mutate(action = gsub(pattern = "No violations were recorded at the time of this inspection.", replacement = "No Violations", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-opened by DOHMH", replacement = "Reopened", x = action)) %>%
mutate(action = gsub(pattern = "Establishment re-closed by DOHMH", replacement = "Reclosed", x = action)) %>%
mutate(action = gsub(pattern = "Establishment Closed by DOHMH.  Violations were cited in the following area(s) and those requiring immediate action were addressed.", replacement = "Closed", x = action, fixed = T))
shiny::runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
shiny::runApp('~/NYC Data Science Academy/R/shiny/shoes')
shiny::runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
View(top20brands)
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
# top 200 brands
brands200 = brands[2:201,]
top200brands = shoes[which(shoes$brand %in% brands200$Var1),]
View(top200brands)
View(brands200)
View(brands200)
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
View(top20brands)
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
shiny::runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
shiny::runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
runApp('~/NYC Data Science Academy/R/shiny/shoes')
